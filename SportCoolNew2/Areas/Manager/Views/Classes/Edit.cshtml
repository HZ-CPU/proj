@model SportCoolNew2.Models.Class

@{
    ViewBag.Title = "修改";
}

<h2 class=" mt-2">修改課程內容</h2>

<form method="post" action="@Url.Action("Edit")" enctype="multipart/form-data">
    @*@using (Html.BeginForm())
        {*@
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>Class</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.cId)

        <div class="form-group">
            @Html.LabelFor(model => model.className, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.className, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.className, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cGradeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("cGradeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cGradeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("cTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.coachId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("coachId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.coachId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.audio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="file" name="file" type="file" value="@Model.audio" class="form-control" style="margin-bottom:10px" />
                <span class="d-flex  justify-content-start">目前影片：</span>
                <video width="350" controls>
                    <source src="@Url.Content(@Model.audio)" type="video/mp4">
                </video>
                @Html.ValidationMessageFor(model => model.audio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-10">
                <input type="submit" value="儲存" class=" btn  btn-success mr-2" />
                @Html.ActionLink("取消", "Index", new { }, new { @class = "btn btn-outline-secondary" })
            </div>
        </div>
    </div>
    @*}*@
</form>

@*<div>
        @Html.ActionLink("返回影片列表", "Index")
    </div>*@



